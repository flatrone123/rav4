/////////////////////////
создание нового репозитория 
git remote add origin /URL/ - соединение локального и удаленного репо 
git branch -M main - переименование главной ветки с master в main
git push -u origin main - отправка локального репозитория на github
git remote set-url origin https://ИМЯ_ПОЛЬЗОВАТЕЛЯ:СГЕНЕРИРОВАННЫЙ_КЛЮЧ@github.com/ВАШ_ГИТ/ИМЯ_РЕПОЗИТОРИЯ.git - 
	новый метод подключения репозитория

////////////////////
загрузка с github
git clone /url/ - первичная загрузка репозитория
git pull - если репозиторий уже загружен и нужно обновить данные с github
git fetch - тоже что и pull

//////////////////////////
commit
git status - просмотри состояние файлов
git add . - добавление файлов для изменений, всех файлов в папке
git add * - 				, всех файлов вообзе
git commit -m 'comment' - создание коммита
git log - просмотр коммиторв

/////////////////////////
создание ветки
git branch - просмотр доступных веток
git branch /имя новая ветка/ - создание ветки
git checkout /имя ветки/ - переход к ветке
git merge /имя присоединямой ветки/ - слияние веток(должени быть на основной ветке)

//////////////////////////
pull request and fork
pull request - pull = потому что речь со стороны главного в комманде, и он решает когда принять(pull) ветку
fork - в отличии от clone и pull, fork присоединятся к репозиторию как разработчик(скачивает копию на github), а не просто копирует его


////////////////////////////
при удалении файлов на локальном репозитории, на удаленном они остаются
поэтому
git commit -a -m "A file was deleted"
git push